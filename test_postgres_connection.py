import psycopg2
from psycopg2 import OperationalError
import os
from dotenv import load_dotenv

load_dotenv()

def test_postgres_connection():
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö POSTGRESQL")
    print("=" * 50)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .env
    database_url = os.getenv('DATABASE_URL')
    print(f"Database URL: {database_url}")
    
    # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
    if database_url:
        # –§–æ—Ä–º–∞—Ç: postgresql+asyncpg://user:password@host:port/database
        try:
            parts = database_url.replace('postgresql+asyncpg://', '').split('@')
            user_pass = parts[0].split(':')
            host_db = parts[1].split('/')
            host_port = host_db[0].split(':')
            
            user = user_pass[0]
            password = user_pass[1] if len(user_pass) > 1 else ''
            host = host_port[0]
            port = host_port[1] if len(host_port) > 1 else '5432'
            database = host_db[1]
            
            print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
            print(f"  –•–æ—Å—Ç: {host}")
            print(f"  –ü–æ—Ä—Ç: {port}")
            print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user}")
            print(f"  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {database}")
            print(f"  –ü–∞—Ä–æ–ª—å: {'*' * len(password)}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL: {e}")
            return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    try:
        print("\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            user="postgres",
            password="MesProject2025",  # –í–∞—à –ø–∞—Ä–æ–ª—å –∏–∑ .env
            database="postgres"  # –°–Ω–∞—á–∞–ª–∞ –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î
        )
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor = conn.cursor()
        cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'mes_db'")
        db_exists = cursor.fetchone()
        
        if db_exists:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'mes_db' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'mes_db' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print("–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
            cursor.execute("CREATE DATABASE mes_db")
            conn.commit()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'mes_db' —Å–æ–∑–¥–∞–Ω–∞")
        
        cursor.close()
        conn.close()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω–∞—à–µ–π –±–∞–∑–µ
        print("\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ 'mes_db'...")
        conn = psycopg2.connect(
            host="localhost",
            port="5432", 
            user="postgres",
            password="MesProject2025",
            database="mes_db"
        )
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ 'mes_db'!")
        conn.close()
        
        return True
        
    except OperationalError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("\nüîß –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –≤ pgAdmin -> Servers -> PostgreSQL -> Properties")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ pgAdmin –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        return False

if __name__ == "__main__":
    test_postgres_connection()
