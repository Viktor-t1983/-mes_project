import requests
import os
import time

def comprehensive_day3_check():
    print("üéØ –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –î–ï–ù–¨ 3")
    print("=" * 70)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    print("1. üìÅ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ü–†–û–ï–ö–¢–ê")
    print("-" * 40)
    
    day3_requirements = {
        "–ú–û–î–ï–õ–ò": [
            "src/models/employee.py",
            "src/models/manufacturing_order.py",
            "src/models/operation.py", 
            "src/models/defect_report.py",
            "src/models/order.py",
            "src/models/project.py"
        ],
        "–°–•–ï–ú–´": [
            "src/schemas/employee.py",
            "src/schemas/manufacturing_order.py",
            "src/schemas/operation.py",
            "src/schemas/defect_report.py",
            "src/schemas/order.py", 
            "src/schemas/project.py"
        ],
        "–£–¢–ò–õ–ò–¢–´": [
            "src/utils/qrcode_generator.py"
        ],
        "–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø": [
            "main.py",
            ".env",
            "migrations"
        ]
    }
    
    structure_score = 0
    total_structure = 0
    
    for category, files in day3_requirements.items():
        print(f"\n{category}:")
        for file_path in files:
            total_structure += 1
            if os.path.exists(file_path):
                print(f"   ‚úÖ {file_path}")
                structure_score += 1
            else:
                print(f"   ‚ùå {file_path}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    print(f"\n2. üîå –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò –≠–ù–î–ü–û–ò–ù–¢–û–í")
    print("-" * 40)
    
    endpoints_to_test = [
        ("GET", "/api/v1/health", "Health Check"),
        ("GET", "/api/v1/orders", "–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤"),
        ("GET", "/api/v1/employees", "–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"),
        ("GET", "/api/v1/mo", "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π"),
        ("GET", "/api/v1/operations", "–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π"),
        ("GET", "/api/v1/defects", "–°–ø–∏—Å–æ–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π"),
        ("GET", "/api/v1/projects", "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"),
        ("GET", "/api/v1/qr/order/1", "QR –∫–æ–¥ –∑–∞–∫–∞–∑–∞"),
        ("GET", "/api/v1/qr/employee/1", "QR –∫–æ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"),
        ("GET", "/api/v1/qr/mo/1", "QR –∫–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è"),
    ]
    
    endpoints_score = 0
    total_endpoints = len(endpoints_to_test)
    
    for method, endpoint, description in endpoints_to_test:
        try:
            start_time = time.time()
            response = requests.get(f"http://localhost:8000{endpoint}", timeout=10)
            response_time = (time.time() - start_time) * 1000
            
            if response.status_code == 200:
                print(f"   ‚úÖ {description} - 200 OK ({response_time:.0f}ms)")
                endpoints_score += 1
            elif response.status_code == 500:
                print(f"   ‚ö†Ô∏è  {description} - 500 (–û—à–∏–±–∫–∞ –ë–î)")
                # –ù–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å—á–∏—Ç–∞–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö
                endpoints_score += 0.5
            else:
                print(f"   ‚ùå {description} - {response.status_code}")
        except Exception as e:
            print(f"   üö´ {description} - –û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    print(f"\n3. üìñ –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò API")
    print("-" * 40)
    
    docs_working = False
    try:
        response = requests.get("http://localhost:8000/docs", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞: http://localhost:8000/docs")
            docs_working = True
        else:
            print("   ‚ùå –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    except:
        print("   üö´ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # 4. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç
    print(f"\n4. üìä –ò–¢–û–ì–û–í–´–ô –†–ê–°–ß–ï–¢ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø")
    print("-" * 40)
    
    structure_percentage = (structure_score / total_structure) * 100
    endpoints_percentage = (endpoints_score / total_endpoints) * 100
    docs_score = 10 if docs_working else 0
    
    total_score = (structure_percentage * 0.4) + (endpoints_percentage * 0.5) + docs_score
    total_max = 100
    
    print(f"   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞: {structure_score}/{total_structure} ({structure_percentage:.1f}%)")
    print(f"   –†–∞–±–æ—Ç–∞—é—â–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: {endpoints_score:.1f}/{total_endpoints} ({endpoints_percentage:.1f}%)")
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {'‚úÖ' if docs_working else '‚ùå'} ({docs_score}/10)")
    print(f"   –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {total_score:.1f}%")
    
    # 5. –í–µ—Ä–¥–∏–∫—Ç
    print(f"\n5. üéØ –í–ï–†–î–ò–ö–¢ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –î–ï–ù–¨ 3")
    print("-" * 40)
    
    if total_score >= 85:
        print("   üéâ –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢!")
        print("   ‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –î–µ–Ω—å 3 –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        print("   ‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ —è–¥—Ä–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ")
        print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    elif total_score >= 70:
        print("   ‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢")
        print("   üîß –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ –º–µ—à–∞—é—Ç —Ä–∞–±–æ—Ç–µ")
        print("   ‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    elif total_score >= 50:
        print("   üìã –ë–ê–ó–û–í–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï")
        print("   üîß –¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è")
        print("   ‚úÖ –ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
    else:
        print("   ‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢")
        print("   üö® –¢—Ä–µ–±—É—é—Ç—Å—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
    
    print(f"\nüåê –°–°–´–õ–ö–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
    print("   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")
    print("   Health Check: http://localhost:8000/api/v1/health")
    print("   QR –∫–æ–¥—ã: http://localhost:8000/api/v1/qr/order/1")
    
    print(f"\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    if total_score >= 70:
        print("   1. –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ –î–µ–Ω—å 4: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Swagger")
        print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ QR-–∫–æ–¥–æ–≤")
    else:
        print("   1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 200 –∏–ª–∏ 500 (–Ω–æ –Ω–µ 404)")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL")

if __name__ == "__main__":
    comprehensive_day3_check()
