#!/usr/bin/env python3
"""End-to-end —Ç–µ—Å—Ç: –ø—Ä–æ–µ–∫—Ç ‚Üí MO ‚Üí –æ—Ç–≥—Ä—É–∑–∫–∞"""
import asyncio
import httpx
import time

async def main():
    base = "http://localhost:8000"
    async with httpx.AsyncClient() as client:
        # 1. –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–µ–∫—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
        project_name = f"E2E_Project_{int(time.time())}"
        project = await client.post(f"{base}/api/v1/projects/", json={
            "name": project_name,
            "status": "active"
        })
        assert project.status_code == 201, f"Project failed: {project.status_code} {project.text}"
        project_id = project.json()["id"]
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: id={project_id}")

        # 2. –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ (MO)
        mo = await client.post(f"{base}/api/v1/manufacturing-orders/", json={
            "project_id": project_id,
            "part_number": "PART-E2E",
            "status": "completed"
        })
        assert mo.status_code == 201, f"MO failed: {mo.status_code} {mo.text}"
        mo_id = mo.json()["id"]
        print(f"‚úÖ MO —Å–æ–∑–¥–∞–Ω: id={mo_id}")

        # 3. –°–æ–∑–¥–∞—ë–º –æ—Ç–≥—Ä—É–∑–∫—É
        shipment = await client.post(f"{base}/api/v1/shipments/", json={
            "project_id": project_id,
            "manufacturing_order_id": mo_id,
            "invoice_number": "E2E-INV-001"
        })
        assert shipment.status_code == 201, f"Shipment create failed: {shipment.status_code} {shipment.text}"
        shipment_id = shipment.json()["id"]
        print(f"‚úÖ –û—Ç–≥—Ä—É–∑–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: id={shipment_id}")

        # 4. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–º
        confirm_warehouse = await client.post(f"{base}/api/v1/shipments/{shipment_id}/confirm-warehouse", json={"employee_qr": "WH_001"})
        assert confirm_warehouse.status_code == 200
        print("‚úÖ –û—Ç–≥—Ä—É–∑–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–º")

        # 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —ç–∫—Å–ø–µ–¥–∏—Ç–æ—Ä–æ–º
        confirm_transporter = await client.post(f"{base}/api/v1/shipments/{shipment_id}/confirm-transporter", json={"transporter_qr": "TR_001", "tracking_number": "E2E-TRACK"})
        assert confirm_transporter.status_code == 200
        print("‚úÖ –û—Ç–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —ç–∫—Å–ø–µ–¥–∏—Ç–æ—Ä–æ–º")

        print("\nüéâ E2E –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù")

if __name__ == "__main__":
    asyncio.run(main())
