#!/usr/bin/env python3
"""
MES Project Day 5 Final Compliance Checker
Senior Security Engineer Level Verification Script
"""
import os
import sys
from pathlib import Path

PROJECT_ROOT = "."
REQUIRED_FILES = [
    # –ö–æ—Ä–µ–Ω—å
    ".env",
    ".gitignore",
    "requirements.txt",
    "main.py",
    "alembic.ini",

    # API
    "src/api/health.py",
    "src/api/day4_endpoints.py",
    "src/api/mobile_api.py",  # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Core
    "src/core/database.py",
    "src/core/security.py",
    "src/core/logger.py",      # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5
    "src/core/auth.py",        # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Models
    "src/models/base.py",
    "src/models/order.py",
    "src/models/employee.py",
    "src/models/manufacturing_order.py",
    "src/models/operation.py",
    "src/models/defect_report.py",
    "src/models/gamification.py",  # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 4
    "src/models/one_c.py",         # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Schemas
    "src/schemas/gamification.py", # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 4
    "src/schemas/one_c.py",        # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Services
    "src/services/gamification_service.py",  # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 4
    "src/services/one_c_service.py",         # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Utils
    "src/utils/qrcode_generator.py",
    "src/utils/crypto.py",  # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5

    # Scripts
    "scripts/backup-db.sh",
    "scripts/restore-db.sh",  # –ù–æ–≤–æ–µ –≤ –î–µ–Ω—å 5
]

REQUIRED_IMPORTS_IN_MAIN = [
    "from src.core.logger import logger",
    "from src.core.security import setup_security_middleware",
    "setup_security_middleware(app)",
]

SECURITY_CHECKS = [
    "src/core/security.py",
    "src/core/auth.py",
    "src/utils/crypto.py",
]

def check_file_exists(file_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª"""
    full_path = os.path.join(PROJECT_ROOT, file_path)
    return Path(full_path).is_file()

def check_content_in_file(file_path, content_list):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ"""
    full_path = os.path.join(PROJECT_ROOT, file_path)
    if not Path(full_path).is_file():
        return False
    try:
        with open(full_path, 'r', encoding='utf-8') as f:
            content = f.read()
        return all(c in content for c in content_list)
    except Exception:
        return False

def run_check():
    print("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ–µ–∫—Ç–∞ 5-–º—É –¥–Ω—é...")
    print("="*60)

    missing_files = []
    for file in REQUIRED_FILES:
        if not check_file_exists(file):
            missing_files.append(file)

    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã:")
        for f in missing_files:
            print(f"   - {f}")
    else:
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")

    print("-" * 60)

    if not check_content_in_file("main.py", REQUIRED_IMPORTS_IN_MAIN):
        print("‚ùå main.py –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ logger –∏ security")
    else:
        print("‚úÖ main.py —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º–ø–æ—Ä—Ç—ã logger –∏ security middleware")

    print("-" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
    env_ok = check_file_exists(".env")
    if not env_ok:
        print("‚ùå .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚úÖ .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    print("-" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_ok = all(check_file_exists(f) for f in SECURITY_CHECKS)
    if not security_ok:
        print("‚ùå –ù–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: security.py, auth.py, crypto.py")
    else:
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ –º–µ—Å—Ç–µ")

    print("="*60)

    if not missing_files and check_content_in_file("main.py", REQUIRED_IMPORTS_IN_MAIN) and env_ok and security_ok:
        print("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç 5-–º—É –¥–Ω—é.")
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî –Ω–∞ –º–µ—Å—Ç–µ.")
        return True
    else:
        print("‚ùå –ü—Ä–æ–µ–∫—Ç –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º 5-–≥–æ –¥–Ω—è. –°–º. –¥–µ—Ç–∞–ª–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    success = run_check()
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç.")
    else:
        print("\n‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.")
        sys.exit(1)
