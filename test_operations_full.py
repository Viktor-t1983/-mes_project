#!/usr/bin/env python3
import asyncio
import asyncpg
import json
from datetime import datetime, timedelta

async def main():
    conn = await asyncpg.connect(
        user='postgres',
        password='MesProject2025',
        database='mes_db',
        host='localhost'
    )
    print("üîç –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π...")

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    await conn.execute(
        "INSERT INTO manufacturing_orders (id, order_number, product_name, product_code, quantity, status) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT (id) DO NOTHING",
        9999, "TEST-ORDER-001", "–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ", "TEST-PROD-001", 10, "in_progress"
    )
    await conn.execute(
        "INSERT INTO machines (id, name, type, machine_token, location) VALUES ($1, $2, $3, $4, $5) ON CONFLICT (id) DO NOTHING",
        9999, "–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∞–Ω–æ–∫", "test", "op_test_token", "–¶–µ—Ö –¢–µ—Å—Ç"
    )
    await conn.execute(
        "INSERT INTO employees (id, first_name, last_name, qr_code, role, is_active) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT (id) DO NOTHING",
        9999, "–¢–µ—Å—Ç", "–û–ø–µ—Ä–∞—Ç–æ—Ä", "TEST_EMP_QR", "operator", True
    )
    print("‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    now = datetime.utcnow()
    await conn.execute("""
        INSERT INTO operations (
            manufacturing_order_id, operation_number, name, status,
            assigned_employee_id, machine_id,
            planned_start, planned_end, planned_duration,
            operation_type, workcenter_id
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
    """, 9999, 1, "–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è", "in_progress", 9999, 9999, now - timedelta(minutes=10), now + timedelta(minutes=50), 60, "test_op", "workcenter_test")

    op_id = await conn.fetchval("SELECT id FROM operations WHERE manufacturing_order_id = 9999 ORDER BY id DESC LIMIT 1")
    print(f"‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ID={op_id}")

    # –ü–∞—É–∑–∞ ‚Äî –ë–ï–ó –ö–û–ù–ö–ê–¢–ï–ù–ê–¶–ò–ò
    pause_event = [{"start": (now + timedelta(minutes=5)).isoformat(), "reason": "–û–±–µ–¥"}]
    await conn.execute("""
        UPDATE operations SET
            pause_events = $1,
            pause_duration = 15,
            status = 'paused'
        WHERE id = $2
    """, json.dumps(pause_event), op_id)
    print("‚è∏Ô∏è  –û–ø–µ—Ä–∞—Ü–∏—è –Ω–∞ –ø–∞—É–∑–µ")

    # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
    await conn.execute("UPDATE operations SET status = 'in_progress' WHERE id = $1", op_id)
    print("‚ñ∂Ô∏è  –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞")

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    await conn.execute("""
        UPDATE operations SET
            actual_start = $1,
            actual_end = $2,
            actual_duration = EXTRACT(EPOCH FROM ($2 - $1)) / 60,
            status = 'completed',
            quality_check_passed = true
        WHERE id = $3
    """, now, now + timedelta(minutes=45), op_id)
    print("‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    clean_time = await conn.fetchval("SELECT actual_duration - pause_duration FROM operations WHERE id = $1", op_id)
    print(f"‚è±Ô∏è  –ß–∏—Å—Ç–æ–µ –≤—Ä–µ–º—è: {clean_time:.1f} –º–∏–Ω")

    await conn.close()
    print("üìä –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")

if __name__ == "__main__":
    asyncio.run(main())
