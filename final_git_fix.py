#!/usr/bin/env python3
"""–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Git —Å—Ç–∞—Ç—É—Å–∞"""

import subprocess
import os

print("üîß –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° GIT")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
print("1. –¢–µ–∫—É—â–∏–π Git —Å—Ç–∞—Ç—É—Å:")
result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True, encoding='utf-8')
if result.stdout.strip():
    print("–ò–∑–º–µ–Ω–µ–Ω–∏—è:")
    for line in result.stdout.strip().split('\n'):
        print(f"   {line}")
else:
    print("   ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–∏—Å—Ç")

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
print("2. –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git...")
subprocess.run(['git', 'add', '.'], check=True)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å
result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True, encoding='utf-8')
if result.stdout.strip():
    print("–ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞:")
    for line in result.stdout.strip().split('\n'):
        print(f"   {line}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    print("3. –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç...")
    commit_msg = """üîß Fix: Correct model imports and clean up

‚úÖ Fixed ManufacturingOrder and DefectReport imports
‚úÖ All 6 models properly imported
‚úÖ CORS middleware working
‚úÖ .env.example created
‚úÖ Project ready for Day 4"""
    
    subprocess.run(['git', 'commit', '-m', commit_msg], check=True)
    print("   ‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω")
    
    # –ü—É—à–∏–º –≤ GitHub
    print("4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub...")
    subprocess.run(['git', 'push', 'origin', 'main'], check=True)
    print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub")
else:
    print("   ‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
print("5. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Git...")
result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True, encoding='utf-8')
if result.stdout.strip():
    print("‚ùå –û—Å—Ç–∞–ª–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
    print(result.stdout)
else:
    print("‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç!")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å GitHub
print("6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å GitHub...")
try:
    subprocess.run(['git', 'fetch', 'origin'], capture_output=True)
    local = subprocess.run(['git', 'rev-parse', 'HEAD'], capture_output=True, text=True).stdout.strip()
    remote = subprocess.run(['git', 'rev-parse', 'origin/main'], capture_output=True, text=True).stdout.strip()
    if local == remote:
        print("   ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å GitHub")
    else:
        print("   ‚ùå –ù–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å GitHub")
except:
    print("   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ GitHub")

