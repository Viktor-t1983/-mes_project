#!/usr/bin/env python3
"""–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏"""

import re

print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –ò–ú–ü–û–†–¢–ê–ú–ò")
print("=" * 50)

# –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π main.py
with open('main.py', 'r', encoding='utf-8') as f:
    content = f.read()

print("–¢–µ–∫—É—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã –º–æ–¥–µ–ª–µ–π:")
imports = re.findall(r'from src\.models\.(\w+) import (\w+)', content)
for module, model in imports:
    print(f"   from src.models.{module} import {model}")

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ (—Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è–º–∏)
correct_mappings = {
    'manufacturingorder': 'manufacturing_order',
    'defectreport': 'defect_report'
}

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
fixed_content = content
for wrong, correct in correct_mappings.items():
    if f'from src.models.{wrong} import' in fixed_content:
        fixed_content = fixed_content.replace(
            f'from src.models.{wrong} import', 
            f'from src.models.{correct} import'
        )
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {wrong} -> {correct}")

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
if fixed_content != content:
    with open('main.py', 'w', encoding='utf-8') as f:
        f.write(fixed_content)
    print("‚úÖ main.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
else:
    print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print("\nüîç –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –ò–ú–ü–û–†–¢–û–í:")
with open('main.py', 'r') as f:
    new_content = f.read()

imports = re.findall(r'from src\.models\.(\w+) import (\w+)', new_content)
for module, model in imports:
    status = "‚úÖ" if '_' in module or module in ['employee', 'operation', 'order', 'project'] else "‚ùå"
    print(f"   {status} from src.models.{module} import {model}")

