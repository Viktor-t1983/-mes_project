# –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ main.py
with open('main.py', 'r', encoding='utf-8') as f:
    lines = f.readlines()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ –±–ª–æ–∫–µ
def fix_indentation_block(start_line, end_line):
    for i in range(start_line, min(end_line, len(lines))):
        line = lines[i]
        stripped = line.lstrip()
        
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è –∏ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
        if stripped and not line.startswith('    ') and not line.startswith('@') and not line.startswith('def ') and not line.startswith('async '):
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø –¥–æ 4 –ø—Ä–æ–±–µ–ª–æ–≤
            lines[i] = '    ' + stripped

# –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–°–¢–£–ü–û–í...")

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±–ª–∞—Å—Ç—å –≤–æ–∫—Ä—É–≥ —Å—Ç—Ä–æ–∫–∏ 249 (–∏–Ω–¥–µ–∫—Å 248)
if len(lines) > 248:
    print(f"–°—Ç—Ä–æ–∫–∞ 249 –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {repr(lines[248])}")
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É 249
    if 'qr_data' in lines[248]:
        lines[248] = '        "qr_data": qr_data\n'
        print("‚úÖ –°—Ç—Ä–æ–∫–∞ 249 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Å–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —ç—Ç–æ–º –±–ª–æ–∫–µ
    fix_indentation_block(245, 255)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open('main.py', 'w', encoding='utf-8') as f:
    f.writelines(lines)

print("‚úÖ –í—Å–µ –æ—Ç—Å—Ç—É–ø—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
