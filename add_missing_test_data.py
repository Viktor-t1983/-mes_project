import psycopg2
import os
from dotenv import load_dotenv

load_dotenv()

def add_test_data():
    db_url = os.getenv("DATABASE_URL")
    if "asyncpg" in db_url:
        db_url = db_url.replace("postgresql+asyncpg://", "postgresql://")
    
    print("üìù –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
    print("=" * 35)
    
    try:
        conn = psycopg2.connect(db_url)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ orders
        cursor.execute("SELECT COUNT(*) FROM orders")
        orders_count = cursor.fetchone()[0]
        
        if orders_count == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ orders...")
            cursor.execute("""
                INSERT INTO orders (project_id, name, description, product_name, quantity, status) VALUES
                (1, '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ 001', '–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–∫–∞–∑ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', '–î–µ—Ç–∞–ª—å –ê', 100, 'pending'),
                (1, '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ 002', '–í—Ç–æ—Ä–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑', '–î–µ—Ç–∞–ª—å –ë', 50, 'in_progress'),
                (1, '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ 003', '–ó–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã', '–¢–µ—Å—Ç–æ–≤–∞—è –¥–µ—Ç–∞–ª—å', 10, 'completed')
            """)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ orders: {cursor.rowcount}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ operations
        cursor.execute("SELECT COUNT(*) FROM operations")
        operations_count = cursor.fetchone()[0]
        
        if operations_count == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ operations...")
            cursor.execute("""
                INSERT INTO operations (manufacturing_order_id, operation_number, name, description, 
                                      operation_type, workcenter_id, planned_duration, actual_duration, status) VALUES
                (1, 'OP001', '–§—Ä–µ–∑–µ—Ä–æ–≤–∫–∞', '–û—Å–Ω–æ–≤–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Ñ—Ä–µ–∑–µ—Ä–æ–≤–∫–∏', 'production', 1, 120.5, 115.2, 'completed'),
                (1, 'OP002', '–®–ª–∏—Ñ–æ–≤–∫–∞', '–§–∏–Ω–∏—à–Ω–∞—è —à–ª–∏—Ñ–æ–≤–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏', 'production', 1, 60.0, 55.5, 'completed'),
                (2, 'OP001', '–°–±–æ—Ä–∫–∞', '–û—Å–Ω–æ–≤–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', 'assembly', 2, 180.0, NULL, 'in_progress')
            """)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ operations: {cursor.rowcount}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ employees
        cursor.execute("SELECT COUNT(*) FROM employees")
        employees_count = cursor.fetchone()[0]
        
        if employees_count == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ employees...")
            cursor.execute("""
                INSERT INTO employees (qr_code, first_name, last_name, role, allowed_workcenters, is_active) VALUES
                ('EMP001', '–ò–≤–∞–Ω', '–ò–≤–∞–Ω–æ–≤', 'operator', '["wc1", "wc2"]', true),
                ('EMP002', '–ü–µ—Ç—Ä', '–ü–µ—Ç—Ä–æ–≤', 'supervisor', '["wc1", "wc2", "wc3"]', true),
                ('EMP003', '–ú–∞—Ä–∏—è', '–°–∏–¥–æ—Ä–æ–≤–∞', 'quality', '["qc1"]', true)
            """)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ employees: {cursor.rowcount}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ projects
        cursor.execute("SELECT COUNT(*) FROM projects")
        projects_count = cursor.fetchone()[0]
        
        if projects_count == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ projects...")
            cursor.execute("""
                INSERT INTO projects (name, description, status) VALUES
                ('–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç', '–ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', 'active'),
                ('–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', '–ü—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã', 'active')
            """)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ projects: {cursor.rowcount}")
        
        print("\nüéâ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï –î–û–ë–ê–í–õ–ï–ù–´!")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    add_test_data()
