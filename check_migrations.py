import os
import subprocess

def check_and_create_migrations():
    print("üóÉÔ∏è –ü–†–û–í–ï–†–ö–ê –ú–ò–ì–†–ê–¶–ò–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    
    migrations_dir = "migrations/versions"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π
    if os.path.exists(migrations_dir) and os.listdir(migrations_dir):
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        return True
    else:
        print("‚ö†Ô∏è  –ü–∞–ø–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –ø—É—Å—Ç–∞—è –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
        try:
            print("üîÑ –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é...")
            result = subprocess.run(["alembic", "revision", "--autogenerate", "-m", "initial_tables"], 
                                  capture_output=True, text=True)
            
            if result.returncode == 0:
                print("‚úÖ –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
                print("üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
                result = subprocess.run(["alembic", "upgrade", "head"], 
                                      capture_output=True, text=True)
                
                if result.returncode == 0:
                    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: {result.stderr}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: {result.stderr}")
                return False
                
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã alembic: {e}")
            print("‚ÑπÔ∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ alembic —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install alembic")
            return False

if __name__ == "__main__":
    check_and_create_migrations()
