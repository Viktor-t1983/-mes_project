import requests
import json

def test_day4_complete():
    print("üéØ –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê MES DAY 4")
    print("=" * 60)
    
    base_url = "http://localhost:8000"
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint
    print("1. üåê –ö–æ—Ä–Ω–µ–≤–æ–π endpoint:")
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—Ö: {data['message']}")
            print(f"   üìã –í–µ—Ä—Å–∏—è: {data['version']}")
            print(f"   üü¢ –°—Ç–∞—Ç—É—Å: {data['status']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
    print("\n2. üè• –°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤—å—è:")
    health_endpoints = [
        ("/api/v1/health", "Health Check"),
        ("/api/v1/ready", "Readiness Check"), 
        ("/api/v1/live", "Liveness Check")
    ]
    
    for endpoint, name in health_endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ {name}: {data['status']}")
            else:
                print(f"   ‚ùå {name}: HTTP {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {name}: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print("\n3. üèÜ –°–∏—Å—Ç–µ–º–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    try:
        response = requests.get(f"{base_url}/api/v1/achievements", timeout=5)
        if response.status_code == 200:
            achievements = response.json()
            print(f"   ‚úÖ Achievements: {len(achievements)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
            for ach in achievements:
                print(f"      üèÖ {ach['name']} - {ach['points']} –±–∞–ª–ª–æ–≤")
        else:
            print(f"   ‚ùå Achievements: HTTP {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Achievements: {e}")
    
    # –†–µ–π—Ç–∏–Ω–≥
    try:
        response = requests.get(f"{base_url}/api/v1/leaderboard", timeout=5)
        if response.status_code == 200:
            leaderboard = response.json()
            print(f"   ‚úÖ Leaderboard: {len(leaderboard)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
            for entry in leaderboard:
                print(f"      {entry['rank']}Ô∏è‚É£ {entry['employee_name']} - {entry['points']} –±–∞–ª–ª–æ–≤")
        else:
            print(f"   ‚ùå Leaderboard: HTTP {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Leaderboard: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    print("\n4. üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1–°:")
    try:
        response = requests.post(f"{base_url}/api/v1/1c/sync-invoice", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ 1C Sync: {data['status']}")
            print(f"   üì® –°–æ–æ–±—â–µ–Ω–∏–µ: {data['message']}")
        else:
            print(f"   ‚ùå 1C Sync: HTTP {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå 1C Sync: {e}")
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    print("\n5. ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:")
    try:
        response = requests.post(f"{base_url}/api/v1/achievements", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ Create Achievement: {data['status']}")
            print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {data['message']}")
        else:
            print(f"   ‚ùå Create Achievement: HTTP {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Create Achievement: {e}")
    
    print("\n" + "=" * 60)
    print("üéâ MES DAY 4 - –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –ù–û–†–ú–ê–õ–¨–ù–û!")
    print("üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–ú–´–®–õ–ï–ù–ù–û–ô –≠–ö–°–ü–õ–£–ê–¢–ê–¶–ò–ò!")

if __name__ == "__main__":
    test_day4_complete()
