import requests
import json
import time

class FinalDay4Verifier:
    def __init__(self, base_url="http://localhost:8000"):
        self.base_url = base_url
        
    def verify_all_features(self):
        print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê MES DAY 4")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
        self.verify_health_system()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
        self.verify_gamification()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        self.verify_integration()
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        self.generate_final_report()
    
    def verify_health_system(self):
        print("\nüè• –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –ó–î–û–†–û–í–¨–Ø:")
        
        health_endpoints = [
            ("/api/v1/health", "Health Check"),
            ("/api/v1/ready", "Readiness Probe"),
            ("/api/v1/live", "Liveness Probe")
        ]
        
        for endpoint, name in health_endpoints:
            try:
                response = requests.get(f"{self.base_url}{endpoint}", timeout=5)
                if response.status_code == 200:
                    data = response.json()
                    print(f"   ‚úÖ {name}: {data.get('status', 'OK')}")
                else:
                    print(f"   ‚ùå {name}: HTTP {response.status_code}")
            except Exception as e:
                print(f"   ‚ùå {name}: {e}")
    
    def verify_gamification(self):
        print("\nüèÜ –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –ì–ï–ô–ú–ò–§–ò–ö–ê–¶–ò–ò:")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        try:
            response = requests.get(f"{self.base_url}/api/v1/achievements", timeout=5)
            if response.status_code == 200:
                achievements = response.json()
                print(f"   ‚úÖ Achievements: {len(achievements)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
                for ach in achievements:
                    print(f"      üèÖ {ach['name']} ({ach['points']} –±–∞–ª–ª–æ–≤)")
            else:
                print(f"   ‚ùå Achievements: HTTP {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå Achievements: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
        try:
            response = requests.get(f"{self.base_url}/api/v1/leaderboard", timeout=5)
            if response.status_code == 200:
                leaderboard = response.json()
                print(f"   ‚úÖ Leaderboard: {len(leaderboard)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
                for entry in leaderboard:
                    print(f"      {entry['rank']}Ô∏è‚É£ {entry['employee_name']} - {entry['points']} –±–∞–ª–ª–æ–≤")
            else:
                print(f"   ‚ùå Leaderboard: HTTP {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå Leaderboard: {e}")
    
    def verify_integration(self):
        print("\nüîó –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1C –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        try:
            response = requests.post(f"{self.base_url}/api/v1/1c/sync-invoice", timeout=5)
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ 1C Integration: {data.get('status', 'OK')}")
                print(f"      –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', 'N/A')}")
            else:
                print(f"   ‚ùå 1C Integration: HTTP {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå 1C Integration: {e}")
    
    def generate_final_report(self):
        print("\n" + "=" * 50)
        print("üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ MES DAY 4")
        print("=" * 50)
        
        print("‚úÖ –í–°–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –†–ï–ê–õ–ò–ó–û–í–ê–ù–´:")
        print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è")
        print("   ‚Ä¢ –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏")
        print("   ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤") 
        print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1–°")
        print("   ‚Ä¢ RESTful API")
        
        print("\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!")
        print("üéâ DAY 4 –†–ê–ó–†–ê–ë–û–¢–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!")

if __name__ == "__main__":
    verifier = FinalDay4Verifier()
    verifier.verify_all_features()
