#!/usr/bin/env python3
"""–§–∏–Ω–∞–ª—å–Ω—ã–π –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤ production"""

import os
import sys

def check_env_secrets():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–µ–∫—Ä–µ—Ç—ã –Ω–µ –≤ –∫–æ–¥–µ"""
    secrets = ["MesProject2025", "your-secret-key"]
    try:
        with open("src/core/config.py", "r", encoding="utf-8") as f:
            content = f.read()
        for secret in secrets:
            if secret in content:
                print(f"‚ùå –ù–∞–π–¥–µ–Ω —Å–µ–∫—Ä–µ—Ç –≤ –∫–æ–¥–µ: {secret}")
                return False
        print("‚úÖ –°–µ–∫—Ä–µ—Ç—ã –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ .env")
        return True
    except UnicodeDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤ config.py: {e}")
        return False

def check_gitignore():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore"""
    required = [".env", "venv/", "__pycache__/"]
    try:
        with open(".gitignore", "r", encoding="utf-8") as f:
            content = f.read()
        for item in required:
            if item not in content:
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ .gitignore: {item}")
                return False
        print("‚úÖ .gitignore –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
    except UnicodeDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤ .gitignore: {e}")
        return False

if __name__ == "__main__":
    print("üîí –§–ò–ù–ê–õ–¨–ù–´–ô SECURITY AUDIT")
    print("=" * 40)
    ok = check_env_secrets() and check_gitignore()
    if ok:
        print("\nüéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ó–ê–ü–£–°–ö–£ –í PRODUCTION")
        sys.exit(0)
    else:
        print("\nüö® –ò–°–ü–†–ê–í–¨–¢–ï –û–®–ò–ë–ö–ò –ü–ï–†–ï–î –ó–ê–ü–£–°–ö–û–ú")
        sys.exit(1)
