import requests
import json
import time

BASE_URL = "http://localhost:8000"

def wait_for_server():
    """–ñ–¥–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...")
    for i in range(15):
        try:
            response = requests.get(f"{BASE_URL}/docs", timeout=5)
            if response.status_code == 200:
                print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤!")
                return True
        except Exception as e:
            print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞... {i+1}/15")
            time.sleep(2)
    print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
    return False

def full_system_test():
    print("\\nüéØ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ MES-X API")
    print("=" * 60)
    
    if not wait_for_server():
        return
    
    # 1. –°–û–ó–î–ê–ï–ú –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï
    print("\\n1. üìã –°–û–ó–î–ê–ï–ú –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï:")
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–¥–ª—è reported_by)
    try:
        response = requests.post(f"{BASE_URL}/api/v1/employees", params={
            "first_name": "–ò–≤–∞–Ω",
            "last_name": "–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–≤", 
            "role": "–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –∫–∞—á–µ—Å—Ç–≤–∞"
        }, timeout=10)
        print(f"   üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫: {response.status_code}")
        if response.status_code == 200:
            employee_data = response.json()
            print(f"      ID: {employee_data.get('id')}")
            employee_id = employee_data.get('id')
        else:
            print(f"      –û—à–∏–±–∫–∞: {response.text}")
            employee_id = 1  # fallback
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {e}")
        employee_id = 1
    
    # –°–æ–∑–¥–∞–µ–º MO
    try:
        response = requests.post(f"{BASE_URL}/api/v1/mo", params={
            "order_number": "RESTART-TEST-001",
            "product_name": "–¢–µ—Å—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞",
            "product_code": "RESTART-TEST",
            "quantity": 5
        }, timeout=10)
        print(f"   üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: {response.status_code}")
        if response.status_code == 200:
            mo_data = response.json()
            mo_id = mo_data.get('id')
            print(f"      ID: {mo_id}")
        else:
            print(f"      –û—à–∏–±–∫–∞: {response.text}")
            mo_id = 1
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è MO: {e}")
        mo_id = 1
    
    # –°–æ–∑–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
    try:
        response = requests.post(f"{BASE_URL}/api/v1/operations", params={
            "manufacturing_order_id": mo_id,
            "operation_number": "OP-RESTART-TEST",
            "name": "–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è",
            "description": "–û–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
        }, timeout=10)
        print(f"   ‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏—è: {response.status_code}")
        if response.status_code == 200:
            op_data = response.json()
            operation_id = op_data.get('id')
            print(f"      ID: {operation_id}")
        else:
            print(f"      –û—à–∏–±–∫–∞: {response.text}")
            operation_id = 1
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏: {e}")
        operation_id = 1
    
    # 2. –¢–ï–°–¢–ò–†–£–ï–ú –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô DEFECTS –≠–ù–î–ü–û–ò–ù–¢
    print("\\n2. ‚ö†Ô∏è –¢–ï–°–¢–ò–†–£–ï–ú –°–ò–°–¢–ï–ú–£ –î–ï–§–ï–ö–¢–û–í:")
    
    try:
        response = requests.post(f"{BASE_URL}/api/v1/defects", params={
            "manufacturing_order_id": mo_id,
            "operation_id": operation_id,
            "reported_by": employee_id,
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –¥–µ—Ñ–µ–∫—Ç –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã",
            "defect_type": "–∫–∞—á–µ—Å—Ç–≤–æ",
            "severity": "medium",
            "quantity_affected": 1
        }, timeout=10)
        
        print(f"   üéØ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            defect_data = response.json()
            print(f"      ‚úÖ –£–°–ü–ï–•: {defect_data}")
        else:
            print(f"      ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # 3. –ü–†–û–í–ï–†–Ø–ï–ú –°–ü–ò–°–û–ö –î–ï–§–ï–ö–¢–û–í
    print("\\n3. üìä –ü–†–û–í–ï–†–Ø–ï–ú –î–ê–ù–ù–´–ï:")
    
    try:
        response = requests.get(f"{BASE_URL}/api/v1/defects", timeout=10)
        print(f"   üìã –°–ø–∏—Å–æ–∫ –¥–µ—Ñ–µ–∫—Ç–æ–≤: {response.status_code}")
        if response.status_code == 200:
            defects = response.json()
            print(f"      –ù–∞–π–¥–µ–Ω–æ –¥–µ—Ñ–µ–∫—Ç–æ–≤: {len(defects)}")
            for defect in defects[:3]:  # –ø–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"      - ID: {defect.get('id')}, –û–ø–∏—Å–∞–Ω–∏–µ: {defect.get('defect_description')[:50]}...")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤: {e}")
    
    # 4. –ü–†–û–í–ï–†–Ø–ï–ú –û–°–ù–û–í–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´
    print("\\n4. üîÑ –ü–†–û–í–ï–†–Ø–ï–ú –û–°–ù–û–í–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´:")
    
    endpoints = [
        "/api/v1/orders",
        "/api/v1/mo", 
        "/api/v1/employees",
        "/api/v1/operations",
        "/api/v1/projects"
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.get(f"{BASE_URL}{endpoint}", timeout=5)
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ {endpoint}: {len(data)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"   ‚ùå {endpoint}: {response.status_code}")
        except Exception as e:
            print(f"   üí• {endpoint}: –æ—à–∏–±–∫–∞ - {e}")
    
    print("\\n" + "=" * 60)
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs")

if __name__ == "__main__":
    full_system_test()
