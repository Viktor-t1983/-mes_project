import requests
import time

BASE_URL = "http://localhost:8000"

def test_missing_endpoints():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–ë–ê–í–õ–ï–ù–ù–´–• –≠–ù–î–ü–û–ò–ù–¢–û–í")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–æ–≤
    print("\n1. üì± –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò QR-–ö–û–î–û–í:")
    test_entities = ['order', 'employee', 'mo']
    
    for entity in test_entities:
        try:
            # –ë–µ—Ä–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID –¥–ª—è —Ç–µ—Å—Ç–∞
            test_id = 1
            
            response = requests.get(f"{BASE_URL}/api/v1/qr/{entity}/{test_id}")
            print(f"   QR {entity}: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"      ‚úÖ –£—Å–ø–µ—Ö: {data['qr_data']}")
            else:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except Exception as e:
            print(f"   üí• –û—à–∏–±–∫–∞ QR {entity}: {e}")
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—É–∑—É –æ–ø–µ—Ä–∞—Ü–∏–π
    print("\n2. ‚è∏Ô∏è –¢–ï–°–¢ –ü–ê–£–ó–´ –û–ü–ï–†–ê–¶–ò–ô:")
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –µ–µ
        # –°–æ–∑–¥–∞–µ–º MO –¥–ª—è —Ç–µ—Å—Ç–∞
        mo_response = requests.post(f"{BASE_URL}/api/v1/mo", params={
            "order_number": "PAUSE-TEST-001",
            "product_name": "–¢–µ—Å—Ç –ø–∞—É–∑—ã –æ–ø–µ—Ä–∞—Ü–∏–π",
            "product_code": "PAUSE-TEST",
            "quantity": 5
        })
        
        if mo_response.status_code == 200:
            mo_id = mo_response.json()['id']
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ MO: {mo_id}")
            
            # –°–æ–∑–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
            op_response = requests.post(f"{BASE_URL}/api/v1/operations", params={
                "manufacturing_order_id": mo_id,
                "operation_number": "OP-PAUSE-TEST",
                "name": "–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–∞—É–∑—ã",
                "description": "–û–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–∞—É–∑—ã"
            })
            
            if op_response.status_code == 200:
                op_id = op_response.json()['id']
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è: {op_id}")
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
                start_response = requests.post(f"{BASE_URL}/api/v1/operations/start", params={
                    "operation_id": op_id,
                    "employee_id": 1  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                })
                
                if start_response.status_code == 200:
                    print(f"   ‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—É–∑—É
                    pause_response = requests.post(f"{BASE_URL}/api/v1/operations/pause", params={
                        "operation_id": op_id
                    })
                    
                    print(f"   ‚è∏Ô∏è –ü–∞—É–∑–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {pause_response.status_code}")
                    if pause_response.status_code == 200:
                        print(f"      ‚úÖ –£—Å–ø–µ—Ö: {pause_response.json()}")
                    else:
                        print(f"      ‚ùå –û—à–∏–±–∫–∞: {pause_response.text}")
                else:
                    print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é: {start_response.text}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é: {op_response.text}")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å MO: {mo_response.text}")
            
    except Exception as e:
        print(f"   üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–∞—É–∑—ã: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    test_missing_endpoints()
